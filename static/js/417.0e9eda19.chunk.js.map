{"version":3,"file":"static/js/417.0e9eda19.chunk.js","mappings":"mPAEaA,EAAWC,EAAAA,EAAAA,GAAH,0JASRC,EAAYD,EAAAA,EAAAA,IAAH,2DAKTE,EAAgBF,EAAAA,EAAAA,EAAH,oE,SCXX,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAQM,EAAIC,KAAKR,KAArB,IAA4BS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACtE,GAAE,CAACX,KAIA,SAACR,EAAD,UACGM,EAAKc,OAAS,GAAKd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OAC3B,2BACE,SAACvB,EAAD,CAAWwB,IAAKD,EAAY,0CAAsCA,GAAtC,gFAAwIE,IAAKJ,KACzK,SAACpB,EAAD,UAAgBqB,KAChB,UAACrB,EAAD,yBAA2BoB,OAHpBD,EADkB,KASpC,C,8LCvBDM,EAAAA,GAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAECC,EAAQ,mCAAG,oGACCF,EAAAA,GAAAA,IAAA,qBAAgC,CACrDG,OAAQ,CACNC,QAASH,KAHS,cAChBI,EADgB,yBAMfA,GANe,2CAAH,qDASRC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,GAAAA,IAAA,eAA0B,CAC/CG,OAAQ,CACNI,MAAOA,EACPH,QAASH,KAJe,cACtBI,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUdG,EAAoB,mCAAG,WAAMC,GAAN,uFACXT,EAAAA,GAAAA,IAAA,gBAAmBS,GAAY,CACpDN,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAM3BA,GAN2B,2CAAH,sDAUpBtB,EAAY,mCAAG,WAAM0B,GAAN,uFACHT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,YAAuC,CAC5DN,OAAQ,CACNC,QAASH,KAHa,cACpBI,EADoB,yBAMnBA,GANmB,2CAAH,sDASZK,EAAe,mCAAG,WAAMD,GAAN,uFACNT,EAAAA,GAAAA,IAAA,gBAAmBS,EAAnB,YAAuC,CAC5DN,OAAQ,CACNC,QAASH,KAHgB,cACvBI,EADuB,yBAMtBA,GANsB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","utils/MovieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ItemCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0;\n  list-style: none;\n  margin-top: 20px;\n`;\n\nexport const ImageCast = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const CharacterCast = styled.p`\n  text-align: center;\n  max-width: 250px;\n`;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { CastMovieApi } from 'utils/MovieApi';\nimport { CharacterCast, ImageCast, ItemCast } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    CastMovieApi(movieId).then(res => setCast(res.data.cast)).catch(error => console.log(error.message));\n  }, [movieId])\n  \n\n  return (\n      <ItemCast>\n        {cast.length > 0 && cast.map(({ id, character, name, profile_path }) => (\n          <li key={id}>\n            <ImageCast src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : `https://sirinc2.org/branch129/wp-content/uploads/2019/04/no-photo-icon-22.png`} alt={character} />\n            <CharacterCast>{name}</CharacterCast>\n            <CharacterCast>Character: {character}</CharacterCast>\n          </li>\n        ))}\n      </ItemCast>\n  )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '34ec28facaf098a1035125630014210f';\n\nexport const MovieApi = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const SearchMovieApi = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const CompleteInfoMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\n\nexport const CastMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const ReviewsMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\n"],"names":["ItemCast","styled","ImageCast","CharacterCast","Cast","useState","cast","setCast","movieId","useParams","useEffect","CastMovieApi","then","res","data","catch","error","console","log","message","length","map","id","character","name","profile_path","src","alt","axios","KEY","MovieApi","params","api_key","response","SearchMovieApi","query","CompleteInfoMovieApi","movie_id","ReviewsMovieApi"],"sourceRoot":""}