{"version":3,"file":"static/js/918.554397d9.chunk.js","mappings":"sQAGaA,GAAcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mKAWXE,EAAeF,EAAAA,EAAAA,IAAH,mGAKZG,EAAcH,EAAAA,EAAAA,IAAH,sHAOXI,EAAYJ,EAAAA,EAAAA,GAAH,iGAMTK,EAAaL,EAAAA,EAAAA,GAAH,0FAMVM,EAAYN,EAAAA,EAAAA,GAAH,+GAOTO,EAAqBP,EAAAA,EAAAA,GAAH,iEAIlBQ,GAAqBR,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,4H,SC5ChB,SAASS,IAAgB,IAAD,IACrC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBL,GAClBM,MAAK,SAAAC,GACJR,EAAQQ,EAAIC,KACb,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACb,KAGF,4BACE,SAACd,EAAD,CAAa4B,GAAE,oBAAEZ,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAzC,sBACClB,IACC,6BACKA,EAAKmB,cACJ,4BACE,UAAC3B,EAAD,YACE,SAACD,EAAD,CACE6B,IAAG,0CAAqCpB,EAAKmB,aAC7CE,IAAKrB,EAAKsB,MACVC,MAAM,MACNC,OAAO,SAET,UAAC/B,EAAD,YACE,SAACC,EAAD,UAAaM,EAAKsB,SAClB,UAAC3B,EAAD,0BAAwBK,EAAKyB,aAAaC,QAAQ,GAAlD,QACA,SAAC/B,EAAD,yBACA,wBAAKK,EAAK2B,YACV,SAAChC,EAAD,sBACA,wBACGK,EAAK4B,OAAOC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClB,OACE,2BACE,4BAAOA,EAAP,QADSA,EAId,aAIP,UAAClC,EAAD,YACE,wCACA,UAACC,EAAD,CAAoBmB,GAAG,OAAOC,MAAO,CAAEC,KAAMd,EAASa,MAAMC,MAA5D,UACG,IADH,OAEO,QAEP,UAACrB,EAAD,CAAoBmB,GAAG,UAAUC,MAAO,CAAEC,KAAMd,EAASa,MAAMC,MAA/D,UACG,IADH,UAEU,QAEV,SAAC,KAAD,cAQjB,C,8LCjEDa,EAAAA,GAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAECC,EAAQ,mCAAG,oGACCF,EAAAA,GAAAA,IAAA,qBAAgC,CACrDG,OAAQ,CACNC,QAASH,KAHS,cAChBI,EADgB,yBAMfA,GANe,2CAAH,qDASRC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,GAAAA,IAAA,eAA0B,CAC/CG,OAAQ,CACNI,MAAOA,EACPH,QAASH,KAJe,cACtBI,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUd7B,EAAoB,mCAAG,WAAMgC,GAAN,uFACXR,EAAAA,GAAAA,IAAA,gBAAmBQ,GAAY,CACpDL,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAM3BA,GAN2B,2CAAH,sDAUpBI,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAAuC,CAC5DL,OAAQ,CACNC,QAASH,KAHa,cACpBI,EADoB,yBAMnBA,GANmB,2CAAH,sDASZK,EAAe,mCAAG,WAAMF,GAAN,uFACNR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAAuC,CAC5DL,OAAQ,CACNC,QAASH,KAHgB,cACvBI,EADuB,yBAMtBA,GANsB,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","utils/MovieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsLink = styled(NavLink)`\n  text-decoration: none;\n  color: blue;\n  font-size: 20px;\n  margin: 20px;\n  font-weight: bold;\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const DetailsImage = styled.img`\n  border-radius: 5px;\n  box-shadow: 2px 2px 2px 0px rgba(0, 0, 0, 0.49);\n`;\n\nexport const DetailsInfo = styled.div`\n  display: flex;\n  margin-top: 15px;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const MovieInfo = styled.ul`\n  width: 850px;\n  line-height: 1.5;\n  border-bottom: 2px solid black;\n`;\n\nexport const TitleMovie = styled.li`\n  font-size: 25px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.li`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const InformationDetails = styled.ul`\n  font-size: 20px;\n  margin-top: 50px;\n`;\nexport const InformationNavLink = styled(NavLink)`\n  display: block;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  text-decoration: none;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { CompleteInfoMovieApi } from 'utils/MovieApi';\nimport { DetailsImage, DetailsInfo, DetailsLink, InformationDetails, InformationNavLink, MovieInfo, TitleMovie, UserScore } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    CompleteInfoMovieApi(movieId)\n      .then(res => {\n        setFilm(res.data);\n      })\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      <DetailsLink to={location.state?.from ?? '/'}> Go back</DetailsLink>\n      {film && (\n        <section>\n            {film.poster_path && (\n              <div>\n                <DetailsInfo>\n                  <DetailsImage\n                    src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n                    alt={film.title}\n                    width=\"300\"\n                    height=\"500\"\n                  />\n                  <MovieInfo>\n                    <TitleMovie>{film.title}</TitleMovie>\n                    <UserScore>User Score: {film.vote_average.toFixed(1)}%</UserScore>\n                    <UserScore>Overview </UserScore>\n                    <li>{film.overview}</li>\n                    <UserScore>Genres</UserScore>\n                    <li>\n                      {film.genres.map(({ name }) => {\n                        return (\n                          <span key={name}>\n                            <span>{name} </span>\n                          </span>\n                        );\n                      })}\n                    </li>\n                  </MovieInfo>\n                </DetailsInfo>\n                <InformationDetails>\n                  <p>Information</p>\n                  <InformationNavLink to=\"cast\" state={{ from: location.state.from }}>\n                    {' '}\n                    Cast{' '}\n                  </InformationNavLink>\n                  <InformationNavLink to=\"reviews\" state={{ from: location.state.from }}>\n                    {' '}\n                    Reviews{' '}\n                  </InformationNavLink>\n                  <Outlet />\n                </InformationDetails>\n              </div>\n            )}\n        </section>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '34ec28facaf098a1035125630014210f';\n\nexport const MovieApi = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const SearchMovieApi = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const CompleteInfoMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\n\nexport const CastMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const ReviewsMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\n"],"names":["DetailsLink","styled","NavLink","DetailsImage","DetailsInfo","MovieInfo","TitleMovie","UserScore","InformationDetails","InformationNavLink","MovieDetails","useState","film","setFilm","movieId","useParams","location","useLocation","useEffect","CompleteInfoMovieApi","then","res","data","catch","error","console","log","message","to","state","from","poster_path","src","alt","title","width","height","vote_average","toFixed","overview","genres","map","name","axios","KEY","MovieApi","params","api_key","response","SearchMovieApi","query","movie_id","CastMovieApi","ReviewsMovieApi"],"sourceRoot":""}